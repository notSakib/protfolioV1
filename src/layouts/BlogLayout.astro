---
import '@fontsource-variable/inter'

import '../../public/blog.less'
const defaultImage = '/src/images/placeholder-1.jpeg'

import Header from '@/components/Header.astro'
import TableOfContents from '@/components/TableOfContents.astro'
import { Image } from 'astro:assets'

const { postDetails, postSlug, headings, collection } = Astro.props
const { title, seoTitle, pubDate, description, image, noindex } = postDetails
const images = import.meta.glob('/src/images/*.{jpeg,jpg,png,gif}')
const imageSrc = await images[image?.url || defaultImage]()

const formattedPublishDate = (inputDate) => {
  const dateOptions = {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }
  return new Date(inputDate).toLocaleDateString('en-US', dateOptions)
}

function getRandomColor() {
  const colors = ['#fff1e6', '#ecf4f9', '#f8f7ff', '#fbfefb', '#f8f4ff']
  const randomIndex = Math.floor(Math.random() * colors.length)
  let color = colors[randomIndex]
  if (!pubDate) color = '#fff'
  const style = `background-color: ${color};`
  return style
}
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content={description} />
    <meta name='viewport' content='width=device-width' />
    <meta name='generator' content={Astro.generator} />
    <link rel='icon' type='image' href='/favicon.ico' />
    <title>{seoTitle || title}</title>
    {
      noindex ? (
        <meta name='robots' content='noindex' />
      ) : (
        <meta name='robots' content='index, follow' />
      )
    }
    <!-- OG tags -->
    {
      pubDate && (
        <>
          <meta property='og:title' content={seoTitle || title} />
          <meta property='og:type' content={pubDate ? 'article' : 'website'} />
          <meta property='og:image' content={imageSrc.default.src} />
          <meta property='og:url' content={'https://mdsaban.com/' + collection + '/' + postSlug} />
        </>
      )
    }
  </head>
  <body style={getRandomColor()} class='p-4 sm:p-0'>
    <Header collection={collection} />
    <main>
      {
        pubDate ? (
          <>
            <div class='mt-8 text-base md:mt-20' style='font-family: monospace;'>
              {formattedPublishDate(new Date(pubDate))}
            </div>
            <h1 class='blog-heading mb-8 md:text-[64px] text-[32px]'>{title}</h1>
            <Image src={imageSrc.default} inferSize alt={title} class='featured-image' />
            <section class='flex gap-20 mb-20 blog'>
              <article>
                <slot />
              </article>
              <aside class='hidden sm:block'>
                <TableOfContents headings={headings} />
              </aside>
            </section>
          </>
        ) : (
          <slot />
        )
      }
    </main>
  </body>
</html>

<!-- 100% privacy-first analytics -->
<script async defer src='https://scripts.simpleanalyticscdn.com/latest.js'></script>
<noscript
  ><img
    src='https://queue.simpleanalyticscdn.com/noscript.gif'
    alt=''
    referrerpolicy='no-referrer-when-downgrade'
  /></noscript
>
